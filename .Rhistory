#Load data
df.train <- read.csv('titanic_train.csv')
head(df.train)
head(df.train)
#Exploration
ggplot(df.train, aes(Survived)) + geom_bar()
#Libraries
library(ggplot2)
#Exploration
ggplot(df.train, aes(Survived)) + geom_bar()
?xlim
#Exploration
ggplot(df.train, aes(Survived)) + geom_bar()
gglot(df.train, aes(Pclass)) + geom_bar(aes)fill = factor(Pclass))
gglot(df.train, aes(Pclass)) + geom_bar(aes(fill = factor(Pclass)))
ggplot(df.train, aes(Pclass)) + geom_bar(aes(fill = factor(Pclass)))
ggplot(df.train, aes(Pclass)) + geom_bar(aes(fill = factor(sex)))
ggplot(df.train, aes(Pclass)) + geom_bar(aes(fill = factor(Sex)))
ggplot(df.train, aes(Sex)) + geom_bar(aes(fill = factor(Sex)))
ggplot(df.train, aes(Sex)) + geom_bar(aes(fill = factor(Sex))) + ylab = 'Gender'
ggplot(df.train, aes(Sex)) + geom_bar(aes(fill = factor(Sex) + ylab = 'Gender')
ggplot(df.train, aes(Sex)) + geom_bar(aes(fill = factor(Sex))
ggplot(sf.train, aes(Age)) + geom_histogram(bins = 20, alpha = 0.5, fill = 'blue')
ggplot(df.train, aes(Age)) + geom_histogram(bins = 20, alpha = 0.5, fill = 'blue')
ggplot(df.train, aes(SibSp)) + geom_bar()
ggplot(df.train, aes(Fare)) + geom_histogram()
ggplot(df.train, aes(Fare)) + geom_histogram(fill = 'green', color = 'black', alpha = 0.5)
ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2))
ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2)) +
title(main = 'Variance of Age by Class', xlab = 'Passgenger Class')
ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2)) +
title(main = 'Variance of Age by Class')
?title
ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2)) +
Title(main = "Variance of Age by Class")
ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2)) +
title(main = "Variance of Age by Class")
pl <- ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2))
pl <- ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2))
pl
pl +  title(main = "Variance of Age by Class")
pl <- ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2)) +
ggtitle("Variance of Age by Class") +
ylab("Passenger Class")
pl
pl <- ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2)) +
ggtitle("Variance of Age by Class") +
xlab("Passenger Class")
pl
pl <- ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2)) +
ggtitle("Variance of Age by Class") +
xlab("Passenger Class") +
theme_bw()
pl
library(Amelia)
install.packages("Amelia")
library(Amelia)
#Imputation of (average) age by class
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
impute_age <- function(age,class){
out <- age
for (i in 1:length(age)){
if (is.na(age[i])){
if (class[i] == 1){
out[i] <- 37
}else if (class[i] == 2){
out[i] <- 29
}else{
out[i] <- 24
}
}else{
out[i]<-age[i]
}
}
return(out)
}
fixed.ages <- impute_age(df.train$Age, df.train$Pclass)
missmap(df.train, main = 'Imputation Check', col = c('yellow', 'black'), legend = F)
print(missmap(df.train, main = 'Imputation Check', col = c('yellow', 'black'), legend = F))
print(missmap(df.train, main = 'Imputation Check', col = c('yellow', 'black'), legend = F)))
print(missmap(df.train, main = 'Imputation Check', col = c('yellow', 'black'), legend = FALSE)))
print(missmap(df.train, main = 'Imputation Check', col = c('yellow', 'black'), legend = FALSE))
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
print(missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE))
fixed.ages <- impute_age(df.train$Age, df.train$Pclass)
print(missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE))
any(is.na(df.train$Age))
#Imputation of (average) age by classes 1, 2 and 3
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
#Imputation of (average) age by classes 1, 2 and 3
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
impute_age <- function(age,class){
out <- age
for (i in 1:length(age)){
if (is.na(age[i])){
if (class[i] == 1){
out[i] <- 37
}else if (class[i] == 2){
out[i] <- 29
}else{
out[i] <- 24
}
}else{
out[i]<-age[i]
}
}
return(out)
}
fixed.ages <- impute_age(df.train$Age, df.train$Pclass)
print(missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE))
print(missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE))
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
print(missmap(df.train, main="Titanic Training Data: Missings Map",
col=c("yellow", "black"), legend=FALSE))
ggplot(df.train,aes(Pclass, Age)) +
geom_boxplot(aes(group = Pclass, fill = factor(Pclass), alpha = 0.4)) +
scale_y_continuous(breaks =seq(min(0), max(80), by = 2)) +
ggtitle("Variance of Age by Class") +
xlab("Passenger Class") +
theme_bw()
#Imputation of (average) age by classes 1, 2 and 3
missmap(df.train, main="Titanic Training Data: Missings Map",
col=c("yellow", "black"), legend=FALSE)
impute_age <- function(age,class){
out <- age
for (i in 1:length(age)){
if (is.na(age[i])){
if (class[i] == 1){
out[i] <- 37
}else if (class[i] == 2){
out[i] <- 29
}else{
out[i] <- 24
}
}else{
out[i]<-age[i]
}
}
return(out)
}
fixed.ages <- impute_age(df.train$Age, df.train$Pclass)
df.train$Age <- fixed.ages
df.train$Age <- fixed.ages
print(missmap(df.train, main="Titanic Training Data: Missings Map",
col=c("yellow", "black"), legend=FALSE))
df.train <- select(df.train,-PassengerId,-Name,-Ticket,-Cabin)
df.train$Survived <- factor(df.train$Survived)
df.train$Pclass <- factor(df.train$Pclass)
df.train$Parch <- factor(df.train$Parch)
df.train$SibSp <- factor(df.train$SibSp)
library(dplyr)
df.train <- select(df.train,-PassengerId,-Name,-Ticket,-Cabin)
df.train$Survived <- factor(df.train$Survived)
df.train$Pclass <- factor(df.train$Pclass)
df.train$Parch <- factor(df.train$Parch)
df.train$SibSp <- factor(df.train$SibSp)
log.model <- glm(formula = Survived ~ . , family = binomial(link='logit'),data = df.train)
summary(log.model)
library(caTools)
install.packages("caTools")
library(caTools)
set.seed(101)
split <- sample.split(df.train$Survived, SplitRatio = 0.7)
final.train = subset(df.train, split == TRUE)
final.test = subset(df.train, split == FALSE)
final.log.model <- glm(Survived ~ . , family = binomial(link = 'logit'), data = final.train)
summary(final.log.model)
Accuracy <- 1 - Error
fitted.probabilities <- predict(final.log.model, final.test, type = 'reponse')
fitted.probabilities <- predict(final.log.model, final.test, type = 'response')
fitted.results <- ifelse(fitted.probabilities > 0.5, 1, 0)
#Metrics
Error <- mean(fitted.results != final.test$Survived)
Error
Accuracy <- 1 - Error
Accuracy
